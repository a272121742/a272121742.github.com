{"version":3,"sources":["webpack:///./node_modules/codemirror/addon/selection/active-line.js"],"names":["CodeMirror","WRAP_CLASS","BACK_CLASS","GUTT_CLASS","clearActiveLines","cm","i","state","activeLines","length","removeLineClass","updateActiveLines","ranges","active","range","option","getOption","nonEmpty","anchor","line","head","empty","getLineHandleVisualStart","push","a","b","sameArray","operation","addLineClass","selectionChange","sel","defineOption","val","old","prev","Init","off","listSelections","on","mod","__webpack_require__"],"mappings":"gFAUC,SAAAA,GACD,aACA,IAAAC,EAAA,wBACAC,EAAA,mCACAC,EAAA,+BAiBA,SAAAC,EAAAC,GACA,QAAAC,EAAA,EAAmBA,EAAAD,EAAAE,MAAAC,YAAAC,OAAiCH,IACpDD,EAAAK,gBAAAL,EAAAE,MAAAC,YAAAF,GAAA,OAAAL,GACAI,EAAAK,gBAAAL,EAAAE,MAAAC,YAAAF,GAAA,aAAAJ,GACAG,EAAAK,gBAAAL,EAAAE,MAAAC,YAAAF,GAAA,SAAAH,GAWA,SAAAQ,EAAAN,EAAAO,GAEA,IADA,IAAAC,EAAA,GACAP,EAAA,EAAmBA,EAAAM,EAAAH,OAAmBH,IAAA,CACtC,IAAAQ,EAAAF,EAAAN,GACAS,EAAAV,EAAAW,UAAA,mBACA,oBAAAD,KAAAE,SAAAH,EAAAI,OAAAC,MAAAL,EAAAM,KAAAD,KAAAL,EAAAO,QAAA,CAEA,IAAAF,EAAAd,EAAAiB,yBAAAR,EAAAM,KAAAD,MACAN,IAAAJ,OAAA,IAAAU,GAAAN,EAAAU,KAAAJ,KAfA,SAAAK,EAAAC,GACA,GAAAD,EAAAf,QAAAgB,EAAAhB,OAAA,SACA,QAAAH,EAAA,EAAmBA,EAAAkB,EAAAf,OAAcH,IACjC,GAAAkB,EAAAlB,IAAAmB,EAAAnB,GAAA,SACA,SAaAoB,CAAArB,EAAAE,MAAAC,YAAAK,IACAR,EAAAsB,UAAA,WACAvB,EAAAC,GACA,QAAAC,EAAA,EAAqBA,EAAAO,EAAAJ,OAAmBH,IACxCD,EAAAuB,aAAAf,EAAAP,GAAA,OAAAL,GACAI,EAAAuB,aAAAf,EAAAP,GAAA,aAAAJ,GACAG,EAAAuB,aAAAf,EAAAP,GAAA,SAAAH,GAEAE,EAAAE,MAAAC,YAAAK,IAIA,SAAAgB,EAAAxB,EAAAyB,GACAnB,EAAAN,EAAAyB,EAAAlB,QArDAZ,EAAA+B,aAAA,8BAAA1B,EAAA2B,EAAAC,GACA,IAAAC,EAAAD,GAAAjC,EAAAmC,MAAAF,EACAD,GAAAE,IACAA,IACA7B,EAAA+B,IAAA,wBAAAP,GACAzB,EAAAC,UACAA,EAAAE,MAAAC,aAEAwB,IACA3B,EAAAE,MAAAC,YAAA,GACAG,EAAAN,IAAAgC,kBACAhC,EAAAiC,GAAA,wBAAAT,OAtBAU,CAAQC,EAAQ","file":"static/js/27.b12a8d1577ea9563c5d7.js","sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n  \"use strict\";\n  var WRAP_CLASS = \"CodeMirror-activeline\";\n  var BACK_CLASS = \"CodeMirror-activeline-background\";\n  var GUTT_CLASS = \"CodeMirror-activeline-gutter\";\n\n  CodeMirror.defineOption(\"styleActiveLine\", false, function(cm, val, old) {\n    var prev = old == CodeMirror.Init ? false : old;\n    if (val == prev) return\n    if (prev) {\n      cm.off(\"beforeSelectionChange\", selectionChange);\n      clearActiveLines(cm);\n      delete cm.state.activeLines;\n    }\n    if (val) {\n      cm.state.activeLines = [];\n      updateActiveLines(cm, cm.listSelections());\n      cm.on(\"beforeSelectionChange\", selectionChange);\n    }\n  });\n\n  function clearActiveLines(cm) {\n    for (var i = 0; i < cm.state.activeLines.length; i++) {\n      cm.removeLineClass(cm.state.activeLines[i], \"wrap\", WRAP_CLASS);\n      cm.removeLineClass(cm.state.activeLines[i], \"background\", BACK_CLASS);\n      cm.removeLineClass(cm.state.activeLines[i], \"gutter\", GUTT_CLASS);\n    }\n  }\n\n  function sameArray(a, b) {\n    if (a.length != b.length) return false;\n    for (var i = 0; i < a.length; i++)\n      if (a[i] != b[i]) return false;\n    return true;\n  }\n\n  function updateActiveLines(cm, ranges) {\n    var active = [];\n    for (var i = 0; i < ranges.length; i++) {\n      var range = ranges[i];\n      var option = cm.getOption(\"styleActiveLine\");\n      if (typeof option == \"object\" && option.nonEmpty ? range.anchor.line != range.head.line : !range.empty())\n        continue\n      var line = cm.getLineHandleVisualStart(range.head.line);\n      if (active[active.length - 1] != line) active.push(line);\n    }\n    if (sameArray(cm.state.activeLines, active)) return;\n    cm.operation(function() {\n      clearActiveLines(cm);\n      for (var i = 0; i < active.length; i++) {\n        cm.addLineClass(active[i], \"wrap\", WRAP_CLASS);\n        cm.addLineClass(active[i], \"background\", BACK_CLASS);\n        cm.addLineClass(active[i], \"gutter\", GUTT_CLASS);\n      }\n      cm.state.activeLines = active;\n    });\n  }\n\n  function selectionChange(cm, sel) {\n    updateActiveLines(cm, sel.ranges);\n  }\n});\n"],"sourceRoot":""}