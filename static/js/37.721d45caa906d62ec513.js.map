{"version":3,"sources":["webpack:///./node_modules/@vue/babel-helper-vue-jsx-merge-props/dist/helper.js","webpack:///./src/components/Table/index.js"],"names":["_extends","Object","assign","a","b","c","arguments","length","d","prototype","hasOwnProperty","call","apply","this","normalMerge","toArrayMerge","functionalMerge","mergeFn","module","exports","reduce","indexOf","Array","e","concat","f","g","h","i","__webpack_exports__","data","needTotalList","selectedRows","selectedRowKeys","localLoading","localDataSource","localPagination","T","props","rowKey","type","String","Function","default","required","pageNum","Number","pageSize","showSizeChanger","Boolean","size","alert","rowSelection","showAlertInfo","showPagination","watch","localPagination.current","val","$router","push","name","$route","params","pageNo","current","created","includes","initTotalList","columns","loadData","methods","refresh","undefined","pagination","filters","sorter","_this","parameter","sortField","field","sortOrder","order","_babel_runtime_helpers_objectSpread__WEBPACK_IMPORTED_MODULE_2___default","result","toString","r","total","totalCount","datas","totalList","forEach","column","needTotal","updateSelect","clearSelected","onChange","renderClear","callback","_this2","$createElement","style","on","click","renderAlert","needTotalItems","map","item","title","customRender","clearItem","clear","attrs","showIcon","slot","render","_this3","localKeys","$data","showAlert","_babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_1___default","show","k","localKey","toUpperCase","table","_vue_babel_helper_vue_jsx_merge_props__WEBPACK_IMPORTED_MODULE_0___default","scopedSlots","$scopedSlots","change","$slots","class"],"mappings":"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","file":"static/js/37.721d45caa906d62ec513.js","sourcesContent":["\"use strict\";function _extends(){return _extends=Object.assign||function(a){for(var b,c=1;c<arguments.length;c++)for(var d in b=arguments[c],b)Object.prototype.hasOwnProperty.call(b,d)&&(a[d]=b[d]);return a},_extends.apply(this,arguments)}var normalMerge=[\"attrs\",\"props\",\"domProps\"],toArrayMerge=[\"class\",\"style\",\"directives\"],functionalMerge=[\"on\",\"nativeOn\"],mergeJsxProps=function(a){return a.reduce(function(c,a){for(var b in a)if(!c[b])c[b]=a[b];else if(-1!==normalMerge.indexOf(b))c[b]=_extends({},c[b],a[b]);else if(-1!==toArrayMerge.indexOf(b)){var d=c[b]instanceof Array?c[b]:[c[b]],e=a[b]instanceof Array?a[b]:[a[b]];c[b]=d.concat(e)}else if(-1!==functionalMerge.indexOf(b)){for(var f in a[b])if(c[b][f]){var g=c[b][f]instanceof Array?c[b][f]:[c[b][f]],h=a[b][f]instanceof Array?a[b][f]:[a[b][f]];c[b][f]=g.concat(h)}else c[b][f]=a[b][f];}else if(\"hook\"==b)for(var i in a[b])c[b][i]=c[b][i]?mergeFn(c[b][i],a[b][i]):a[b][i];else c[b]=a[b];return c},{})},mergeFn=function(a,b){return function(){a&&a.apply(this,arguments),b&&b.apply(this,arguments)}};module.exports=mergeJsxProps;\n","import {Table as T} from 'ant-design-vue';\n\nexport default {\n  data () {\n    return {\n      needTotalList: [],\n\n      selectedRows: [],\n      selectedRowKeys: [],\n\n      localLoading: false,\n      localDataSource: [],\n      localPagination: Object.assign({}, T.props.pagination)\n    }\n  },\n  props: Object.assign({}, T.props, {\n    rowKey: {\n      type: [String, Function],\n      default: 'id'\n    },\n    data: {\n      type: Function,\n      required: true\n    },\n    pageNum: {\n      type: Number,\n      default: 1\n    },\n    pageSize: {\n      type: Number,\n      default: 10\n    },\n    showSizeChanger: {\n      type: Boolean,\n      default: true\n    },\n    size: {\n      type: String,\n      default: 'default'\n    },\n    /**\n     * {\n     *   show: true,\n     *   clear: Function\n     * }\n     */\n    alert: {\n      type: [Object, Boolean],\n      default: null\n    },\n    rowSelection: {\n      type: Object,\n      default: () => ({})\n    },\n    /** @Deprecated */\n    showAlertInfo: {\n      type: Boolean,\n      default: false\n    },\n    showPagination: {\n      type: String,\n      default: 'auto'\n    }\n  }),\n  watch: {\n    'localPagination.current' (val) {\n      this.$router.push({\n        name: this.$route.name,\n        params: Object.assign({}, this.$route.params, {\n          pageNo: val\n        })\n      })\n    },\n    pageNum (val) {\n      Object.assign(this.localPagination, {\n        current: val\n      })\n    },\n    pageSize (val) {\n      Object.assign(this.localPagination, {\n        pageSize: val\n      })\n    },\n    showSizeChanger (val) {\n      Object.assign(this.localPagination, {\n        showSizeChanger: val\n      })\n    }\n  },\n  created () {\n    this.localPagination = ['auto', true].includes(this.showPagination) && Object.assign({}, this.localPagination, {\n      current: this.pageNum,\n      pageSize: this.pageSize,\n      showSizeChanger: this.showSizeChanger\n    })\n    this.needTotalList = this.initTotalList(this.columns)\n    this.loadData()\n  },\n  methods: {\n    /**\n     * 表格重新加载方法\n     * 如果参数为 true, 则强制刷新到第一页\n     * @param Boolean bool\n     */\n    refresh (bool = false) {\n      bool && (this.localPagination = Object.assign({}, {\n        current: 1, pageSize: this.pageSize\n      }))\n      this.loadData()\n    },\n    /**\n     * 加载数据方法\n     * @param {Object} pagination 分页选项器\n     * @param {Object} filters 过滤条件\n     * @param {Object} sorter 排序条件\n     */\n    loadData (pagination, filters, sorter) {\n      this.localLoading = true\n      const parameter = Object.assign({\n        pageNo: (pagination && pagination.current) ||\n            this.localPagination.current,\n        pageSize: (pagination && pagination.pageSize) ||\n            this.localPagination.pageSize\n      },\n      (sorter && sorter.field && {\n        sortField: sorter.field\n      }) || {},\n      (sorter && sorter.order && {\n        sortOrder: sorter.order\n      }) || {}, {\n        ...filters\n      }\n      )\n      const result = this.data(parameter)\n      // 对接自己的通用数据接口需要修改下方代码中的 r.pageNo, r.totalCount, r.data\n      // eslint-disable-next-line\n      if (result instanceof Promise || '[object Promise]' === result.toString()) {\n        result.then(r => {\n          this.localPagination = Object.assign({}, this.localPagination, {\n            current: r.pageNo, // 返回结果中的当前分页数\n            total: r.totalCount, // 返回结果中的总记录数\n            showSizeChanger: this.showSizeChanger,\n            pageSize: (pagination && pagination.pageSize) ||\n              this.localPagination.pageSize\n          })\n          // 为防止删除数据后导致页面当前页面数据长度为 0 ,自动翻页到上一页\n          if (r.datas.length === 0 && this.localPagination.current !== 1) {\n            this.localPagination.current--\n            this.loadData()\n            return\n          }\n\n          // 这里用于判断接口是否有返回 r.totalCount 或 this.showPagination = false\n          // 当情况满足时，表示数据不满足分页大小，关闭 table 分页功能\n          !r.totalCount && ['auto', false].includes(this.showPagination) && (this.localPagination = false)\n          this.localDataSource = r.datas // 返回结果中的数组数据\n          this.localLoading = false\n        })\n      }\n    },\n    initTotalList (columns) {\n      const totalList = []\n      columns && columns instanceof Array && columns.forEach(column => {\n        if (column.needTotal) {\n          totalList.push({\n            ...column,\n            total: 0\n          })\n        }\n      })\n      return totalList\n    },\n    /**\n     * 用于更新已选中的列表数据 total 统计\n     * @param selectedRowKeys\n     * @param selectedRows\n     */\n    updateSelect (selectedRowKeys, selectedRows) {\n      // this.selectedRows = selectedRows\n      // this.selectedRowKeys = selectedRowKeys\n      // const list = this.needTotalList\n      // this.needTotalList = list.map(item => {\n      //   return {\n      //     ...item,\n      //     total: selectedRows.reduce((sum, val) => {\n      //       const total = sum + parseInt(get(val, item.dataIndex))\n      //       return isNaN(total) ? 0 : total\n      //     }, 0)\n      //   }\n      // })\n    },\n    /**\n     * 清空 table 已选中项\n     */\n    clearSelected () {\n      if (this.rowSelection) {\n        this.rowSelection.onChange([], [])\n        this.updateSelect([], [])\n      }\n    },\n    /**\n     * 处理交给 table 使用者去处理 clear 事件时，内部选中统计同时调用\n     * @param callback\n     * @returns {*}\n     */\n    renderClear (callback) {\n      if (this.selectedRowKeys.length <= 0) return null\n      return (\n        <a style=\"margin-left: 24px\" onClick={() => {\n          callback()\n          this.clearSelected()\n        }}>清空</a>\n      )\n    },\n    renderAlert () {\n      // 绘制统计列数据\n      const needTotalItems = this.needTotalList.map((item) => {\n        return (<span style=\"margin-right: 12px\">\n          {item.title}总计 <a style=\"font-weight: 600\">{!item.customRender ? item.total : item.customRender(item.total)}</a>\n        </span>)\n      })\n\n      // 绘制 清空 按钮\n      const clearItem = (typeof this.alert.clear === 'boolean' && this.alert.clear) ? (\n        this.renderClear(this.clearSelected)\n      ) : (this.alert !== null && typeof this.alert.clear === 'function') ? (\n        this.renderClear(this.alert.clear)\n      ) : null\n\n      // 绘制 alert 组件\n      return (\n        <a-alert showIcon={true} style=\"margin-bottom: 16px\">\n          <template slot=\"message\">\n            <span style=\"margin-right: 12px\">已选择: <a style=\"font-weight: 600\">{this.selectedRows.length}</a></span>\n            {needTotalItems}\n            {clearItem}\n          </template>\n        </a-alert>\n      )\n    }\n  },\n\n  render () {\n    const props = {}\n    const localKeys = Object.keys(this.$data)\n    const showAlert = (typeof this.alert === 'object' && this.alert !== null && this.alert.show) && typeof this.rowSelection.selectedRowKeys !== 'undefined' || this.alert\n\n    Object.keys(T.props).forEach(k => {\n      const localKey = `local${k.substring(0, 1).toUpperCase()}${k.substring(1)}`\n      if (localKeys.includes(localKey)) {\n        props[k] = this[localKey]\n        return props[k]\n      }\n      if (k === 'rowSelection') {\n        if (showAlert && this.rowSelection) {\n          // 重新绑定 rowSelection 事件\n          props[k] = {\n            selectedRows: this.selectedRows,\n            selectedRowKeys: this.selectedRowKeys,\n            onChange: (selectedRowKeys, selectedRows) => {\n              this.updateSelect(selectedRowKeys, selectedRows)\n              typeof this[k].onChange !== 'undefined' && this[k].onChange(selectedRowKeys, selectedRows)\n            }\n          }\n          return props[k]\n        }\n        // 如果没打算开启 rowSelection 则清空默认的选择项\n        props[k] = null\n        return props[k]\n      }\n      props[k] = this[k]\n      return props[k]\n    })\n    const table = (\n      <a-table {...{ props, scopedSlots: { ...this.$scopedSlots } }} onChange={this.loadData}>\n        {this.$slots.default}\n      </a-table>\n    )\n\n    return (\n      <div class=\"table-wrapper\">\n        { showAlert ? this.renderAlert() : null }\n        { table }\n      </div>\n    )\n  }\n}"],"sourceRoot":""}