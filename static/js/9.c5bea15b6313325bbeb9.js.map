{"version":3,"sources":["webpack:///./src/components/MxGraph/XmlGraph.vue?2ced","webpack:///./src/components/MxGraph/XmlGraph.vue?e113","webpack:///src/components/MxGraph/XmlGraph.vue","webpack:///./src/components/MxGraph/XmlGraph.vue"],"names":["render","_vm","this","_h","$createElement","_c","_self","attrs","disabled","selectedCells","on","click","handleRemoveSelected","_v","undoable","handleUndo","redoable","handleRedo","ref","_withStripped","MxGraph_XmlGraphvue_type_script_lang_js_","props","xml","type","String","default","data","graph","undoManager","computed","getSelectionCount","indexOfNextAdd","history","length","mounted","container","$refs","initGraph","listenEvent","methods","mx","mxGraph","xmlDocument","mxUtils","parseXml","documentElement","nodeName","decoder","mxCodec","root","decode","getModel","configuration","addUndoManager","window","setConnectable","setAllowLoops","setMultigraph","setCellsResizable","setAllowDanglingEdges","setPortsEnabled","mxGraphHandler","prototype","guidesEnabled","setEnabled","vm","dblClick","e","cell","isEnabled","mxEvent","isConsumed","isCellEditable","model","isVertex","$emit","listener","sender","evt","undoableEditHappened","getProperty","mxUndoManager","addListener","UNDO","getView","REDO","addGraph","cells","getElementsByTagName","addCells","Object","map","loadGraph","clearGraph","removeCells","getChildVertices","getDefaultParent","getXml","node","createXmlDocument","encode","add","callback","getSelectionCells","undo","redo","component","componentNormalizer","options","__file","__webpack_exports__"],"mappings":"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","file":"static/js/9.c5bea15b6313325bbeb9.js","sourcesContent":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\"div\", [\n    _c(\n      \"div\",\n      [\n        _c(\n          \"a-button\",\n          {\n            attrs: { disabled: !_vm.selectedCells },\n            on: { click: _vm.handleRemoveSelected }\n          },\n          [_vm._v(\"\\n      删除\\n    \")]\n        ),\n        _vm._v(\" \"),\n        _c(\n          \"a-button\",\n          { attrs: { disabled: !_vm.undoable }, on: { click: _vm.handleUndo } },\n          [_vm._v(\"\\n      撤销\\n    \")]\n        ),\n        _vm._v(\" \"),\n        _c(\n          \"a-button\",\n          { attrs: { disabled: !_vm.redoable }, on: { click: _vm.handleRedo } },\n          [_vm._v(\"\\n      重做\\n    \")]\n        )\n      ],\n      1\n    ),\n    _vm._v(\" \"),\n    _c(\"div\", { ref: \"mx-container\" })\n  ])\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","import mod from \"-!../../../node_modules/happypack/loader.js?id=happybabel!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./XmlGraph.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/happypack/loader.js?id=happybabel!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./XmlGraph.vue?vue&type=script&lang=js&\"","<template>\n  <div>\n    <div>\n      <a-button\n        :disabled=\"!selectedCells\"\n        @click=\"handleRemoveSelected\"\n      >\n        删除\n      </a-button>\n      <a-button\n        :disabled=\"!undoable\"\n        @click=\"handleUndo\"\n      >\n        撤销\n      </a-button>\n      <a-button\n        :disabled=\"!redoable\"\n        @click=\"handleRedo\"\n      >\n        重做\n      </a-button>\n    </div>\n    <div ref=\"mx-container\"></div>\n  </div>\n</template>\n\n<script>\nimport mx from '@lib/mx';\nimport {map} from 'ramda';\nconst XmlElementNamed_mxGraphModel = 'mxGraphModel';\nconst XmlElementNamed_mxCell = 'mxCell';\n\n\nexport default {\n  props: {\n    // 传入的字符串xml或者xml地址（TODO:后期做判断处理）\n    xml: {\n      type: String,\n      default: ''\n    }\n  },\n  data () {\n    return {\n      graph: null,\n      undoManager: null,\n    };\n  },\n  computed: {\n    selectedCells () {\n      return this.graph && this.graph.getSelectionCount()\n    },\n    undoable () {\n      const {graph, undoManager} = this;\n      return graph && undoManager && undoManager.indexOfNextAdd && undoManager.history.length;\n    },\n    redoable () {\n      const {graph, undoManager} = this;\n      return graph && undoManager && undoManager.indexOfNextAdd !== undoManager.history.length;\n    }\n  },\n  mounted () {\n    this.container = this.$refs['mx-container']\n    this.initGraph();\n    this.listenEvent();\n  },\n  methods: {\n    // 初始化Graph\n    initGraph () {\n      // 实例化图形\n      const graph = this.graph = new mx.mxGraph(this.container);\n      // 获取xml文档对象\n      const xmlDocument = mx.mxUtils.parseXml(this.xml);\n      if (xmlDocument.documentElement != null && xmlDocument.documentElement.nodeName === XmlElementNamed_mxGraphModel) {\n        // 获取解码器\n        const decoder = new mx.mxCodec(xmlDocument);\n        // 获取xml文档根节点\n        const root = xmlDocument.documentElement;\n        // 将xml解码到图形模型中\n        decoder.decode(root, graph.getModel());\n      }\n      this.configuration();\n      this.addUndoManager();\n      window.graph = graph;\n      window.mx = mx;\n    },\n    configuration () {\n      const { graph } = this;\n      // 设置可以连接\n      graph.setConnectable(true);\n      // 自己无法连接自己\n      graph.setAllowLoops(false);\n      // 可否重复连接 \n      graph.setMultigraph(false); \n      // 不允许图形改变大小\n      graph.setCellsResizable(false);\n      // 不允许拖动连线\n      graph.setAllowDanglingEdges(false);\n      // 设置不添加连线端口\n      graph.setPortsEnabled(false);\n      // 开启指引功能\n      mx.mxGraphHandler.prototype.guidesEnabled = true;\n      // 选择基本元素开启\n      graph.setEnabled(true);\n    },\n    listenEvent () {\n      const vm = this;\n      this.graph.dblClick =  function (e, cell) {\n        const graph = this;\n        if (graph.isEnabled() && !mx.mxEvent.isConsumed(e) && graph.isCellEditable(cell) && graph.model.isVertex(cell)) {\n          vm.$emit('event:dblClick', graph, cell, e);\n        }\n      };\n    },\n    // 添加撤销监听器\n    addUndoManager () {\n      const { graph } = this;\n      const undoManager = this.undoManager = new mx.mxUndoManager();\n      const listener = function (sender, evt) {\n        undoManager.undoableEditHappened(evt.getProperty('edit'));\n      };\n      graph.getModel().addListener(mx.mxEvent.UNDO, listener);\n      graph.getView().addListener(mx.mxEvent.UNDO, listener);\n      graph.getModel().addListener(mx.mxEvent.REDO, listener);\n      graph.getView().addListener(mx.mxEvent.REDO, listener);\n      this.undoManager = undoManager;\n      window.undoManager = undoManager;\n    },\n    // 追加Graph\n    addGraph (xml) {\n      // 实例化图形\n      const graph = this.graph;\n      // 获取xml文档对象\n      const xmlDocument = mx.mxUtils.parseXml(xml);\n      // 获取解码器\n      const decoder = new mx.mxCodec(xmlDocument);\n      // 获取xml文档的mxCell节点\n      const cells = xmlDocument.getElementsByTagName(XmlElementNamed_mxCell);\n      graph.addCells(map(cell => decoder.decode(cell), cells));\n    },\n    // 加载Graph\n    loadGraph (xml) {\n      this.clearGraph();\n      this.addGraph(xml);\n    },\n    // 清除所有图形\n    clearGraph () {\n      // 实例化图形\n      const graph = this.graph;\n      graph.removeCells(graph.getChildVertices(graph.getDefaultParent()));\n    },\n    // 获取模型对象\n    getModel () {\n      return this.graph.getModel();\n    },\n    getXml () {\n      var enc = new mx.mxCodec(mx.mxUtils.createXmlDocument());\n      var node = enc.encode(this.graph.getModel());\n      return mx.mxUtils.getXml(node);\n    },\n    add (callback) {\n      callback(this.graph);\n    },\n    // 删除选中\n    handleRemoveSelected () {\n      const { graph } = this;\n      const selectedCells = graph.getSelectionCells();\n      graph.removeCells(selectedCells);\n    },\n    // 撤销\n    handleUndo () {\n      const { undoManager } = this;\n      if (undoManager) {\n        undoManager.undo();\n      }\n    },\n    handleRedo () {\n      const { undoManager } = this;\n      if (undoManager) {\n        undoManager.redo();\n      }\n    }\n  }\n}\n</script>\n\n","import { render, staticRenderFns } from \"./XmlGraph.vue?vue&type=template&id=0c28d71a&\"\nimport script from \"./XmlGraph.vue?vue&type=script&lang=js&\"\nexport * from \"./XmlGraph.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"/Users/loong/gitlab/vsee-cloud/node_modules/vue-hot-reload-api/dist/index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!module.hot.data) {\n      api.createRecord('0c28d71a', component.options)\n    } else {\n      api.reload('0c28d71a', component.options)\n    }\n    module.hot.accept(\"./XmlGraph.vue?vue&type=template&id=0c28d71a&\", function () {\n      api.rerender('0c28d71a', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"src/components/MxGraph/XmlGraph.vue\"\nexport default component.exports"],"sourceRoot":""}