{"version":3,"sources":["webpack:///./src/modules/SimulationOperation/view/_SimulationDataAnalysis.vue?023d","webpack:///src/modules/SimulationOperation/view/_SimulationDataAnalysis.vue","webpack:///./src/modules/SimulationOperation/view/_SimulationDataAnalysis.vue?f9c7","webpack:///./src/modules/SimulationOperation/view/_SimulationDataAnalysis.vue"],"names":["render","_vm","this","_h","$createElement","_c","_self","attrs","gutter","span","ref","on","change","handleInoutVarsChange","_v","data-source","treeData","search","shown-only","onSelect","selectMenuTreeItem","staticStyle","padding-left","layout","form","label","directives","name","rawName","value","initialValue","expression","width","auto-focus","range","type","click","$event","startSimulation","stopSimulation","xml","event:dblClick","cellDbClick","height","node-list","nodeList","selectOk","selectCancel","chart-set","chartSet","_withStripped","mapActions","Object","vuex_esm","EXAMPLE_DATA","year","view_SimulationDataAnalysisvue_type_script_lang_js_","components","MenuTree","__webpack_require__","e","then","bind","XmlGraph","InoutVarsModal","InoutVarsTable","ChartSet","props","id","String","default","data","$form","createForm","created","_this","getAllStdnode","res","result","methods","objectSpread_default","convertPortDefine","pipe","util","graph","cell","vertex","nodeData","$refs","inoutVarsTable","show","inoutVars","_ref","key","addStdnode","_this2","vm","getStdnode","stdnode","ports","portDefine","add","model","getModel","parent","getDefaultParent","configureStylesheet","beginUpdate","subject","types","countBy","prop","t","clone","insertVertex","setConnectable","forEach","port","concat","geometry","offset","mx","mxPoint","portWidth","endUpdate","setSelectionCell","node","projectID","nodeID","priority","nodetypeID","enabled","addNode","push","style","mxConstants","STYLE_SHAPE","SHAPE_RECTANGLE","STYLE_PERIMETER","mxPerimeter","RectanglePerimeter","STYLE_ALIGN","ALIGN_CENTER","STYLE_VERTICAL_ALIGN","ALIGN_MIDDLE","STYLE_GRADIENTCOLOR","STYLE_FILLCOLOR","STYLE_STROKECOLOR","STYLE_FONTCOLOR","STYLE_ROUNDED","STYLE_OPACITY","STYLE_FONTSIZE","STYLE_FONTSTYLE","STYLE_IMAGE_WIDTH","STYLE_IMAGE_HEIGHT","getStylesheet","putDefaultVertexStyle","SHAPE_SWIMLANE","ALIGN_TOP","STYLE_STARTSIZE","putCellStyle","SHAPE_IMAGE","STYLE_PERIMETER_SPACING","ALIGN_LEFT","getDefaultEdgeStyle","STYLE_LABEL_BACKGROUNDCOLOR","STYLE_STROKEWIDTH","STYLE_EDGE","mxEdgeStyle","EntityRelation","$set","$delete","console","log","getFieldsValue","startStopTime","getXml","component","componentNormalizer","options","__file","__webpack_exports__"],"mappings":"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","file":"static/js/30.402b288876015bf8db19.js","sourcesContent":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"div\",\n    [\n      _c(\n        \"a-row\",\n        { attrs: { gutter: 8 } },\n        [\n          _c(\n            \"a-col\",\n            { attrs: { span: 6 } },\n            [\n              _c(\n                \"a\",\n                [\n                  _c(\"inout-vars-modal\", {\n                    ref: \"inoutVarsTable\",\n                    on: { change: _vm.handleInoutVarsChange }\n                  })\n                ],\n                1\n              ),\n              _vm._v(\" \"),\n              _c(\"menu-tree\", {\n                attrs: {\n                  \"data-source\": _vm.treeData,\n                  search: true,\n                  \"shown-only\": \"\"\n                },\n                on: { onSelect: _vm.selectMenuTreeItem }\n              })\n            ],\n            1\n          ),\n          _vm._v(\" \"),\n          _c(\n            \"a-col\",\n            { attrs: { span: 18 } },\n            [\n              _c(\n                \"a-form\",\n                {\n                  staticStyle: { \"padding-left\": \"16px\" },\n                  attrs: { layout: \"inline\", form: _vm.form }\n                },\n                [\n                  _c(\n                    \"a-form-item\",\n                    { attrs: { label: \"仿真起止时间\" } },\n                    [\n                      _c(\"a-slider\", {\n                        directives: [\n                          {\n                            name: \"decorator\",\n                            rawName: \"v-decorator\",\n                            value: [\"startStopTime\", { initialValue: [1, 7] }],\n                            expression:\n                              \"['startStopTime', {initialValue: [1, 7]}]\"\n                          }\n                        ],\n                        staticStyle: { width: \"280px\" },\n                        attrs: { \"auto-focus\": \"\", range: \"\" }\n                      })\n                    ],\n                    1\n                  ),\n                  _vm._v(\" \"),\n                  _c(\n                    \"a-form-item\",\n                    [\n                      _c(\n                        \"a-button\",\n                        {\n                          attrs: { type: \"primary\" },\n                          on: {\n                            click: function($event) {\n                              return _vm.startSimulation(_vm.form)\n                            }\n                          }\n                        },\n                        [_vm._v(\"\\n            启动\\n          \")]\n                      )\n                    ],\n                    1\n                  ),\n                  _vm._v(\" \"),\n                  _c(\n                    \"a-form-item\",\n                    [\n                      _c(\n                        \"a-button\",\n                        {\n                          on: {\n                            click: function($event) {\n                              return _vm.stopSimulation(_vm.form)\n                            }\n                          }\n                        },\n                        [_vm._v(\"\\n            停止\\n          \")]\n                      )\n                    ],\n                    1\n                  )\n                ],\n                1\n              ),\n              _vm._v(\" \"),\n              _c(\"xml-graph\", {\n                ref: \"graph\",\n                attrs: { xml: _vm.xml },\n                on: { \"event:dblClick\": _vm.cellDbClick }\n              })\n            ],\n            1\n          )\n        ],\n        1\n      ),\n      _vm._v(\" \"),\n      _c(\n        \"a-row\",\n        { staticStyle: { height: \"400px\" }, attrs: { gutter: 8 } },\n        [\n          _c(\n            \"a-col\",\n            { attrs: { span: 6 } },\n            [\n              _c(\"inout-vars-table\", {\n                attrs: { \"node-list\": _vm.nodeList },\n                on: { selectOk: _vm.selectOk, selectCancel: _vm.selectCancel }\n              })\n            ],\n            1\n          ),\n          _vm._v(\" \"),\n          _c(\n            \"a-col\",\n            { attrs: { span: 18 } },\n            [_c(\"chart-set\", { attrs: { \"chart-set\": _vm.chartSet } })],\n            1\n          )\n        ],\n        1\n      )\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","<template>\n  <div>\n    <a-row :gutter=\"8\">\n      <a-col :span=\"6\">\n        <a>\n          <inout-vars-modal\n            ref=\"inoutVarsTable\"\n            @change=\"handleInoutVarsChange\"\n          />\n        </a>\n        <!-- 菜单树 -->\n        <menu-tree\n          :data-source=\"treeData\"\n          :search=\"true\"\n          shown-only\n          @onSelect=\"selectMenuTreeItem\"\n        />\n      </a-col>\n      <a-col :span=\"18\">\n        <a-form\n          style=\"padding-left: 16px;\"\n          layout=\"inline\"\n          :form=\"form\"\n        >\n          <a-form-item\n            label=\"仿真起止时间\"\n          >\n            <a-slider\n              style=\"width: 280px;\"\n              auto-focus\n              range\n              v-decorator=\"['startStopTime', {initialValue: [1, 7]}]\"\n            />\n          </a-form-item>\n          <a-form-item>\n            <a-button\n              type=\"primary\"\n              @click=\"startSimulation(form)\"\n            >\n              启动\n            </a-button>\n          </a-form-item>\n          <a-form-item>\n            <a-button @click=\"stopSimulation(form)\">\n              停止\n            </a-button>\n          </a-form-item>\n        </a-form>\n        <!-- mxGraph -->\n        <xml-graph\n          ref=\"graph\"\n          :xml=\"xml\"\n          @event:dblClick=\"cellDbClick\"\n        />\n      </a-col>\n    </a-row>\n    <a-row\n      :gutter=\"8\"\n      style=\"height: 400px;\"\n    >\n      <a-col :span=\"6\">\n        <!-- 属性表格 -->\n        <inout-vars-table\n          :node-list=\"nodeList\"\n          @selectOk=\"selectOk\"\n          @selectCancel=\"selectCancel\"\n        />\n      </a-col>\n      <a-col :span=\"18\">\n        <!-- 图表集 -->\n        <chart-set :chart-set=\"chartSet\"></chart-set>\n      </a-col>\n    </a-row>\n  </div>\n</template>\n\n<script>\nimport { clone, countBy, prop, forEach, pipe } from 'ramda';\nimport { createNamespacedHelpers } from 'vuex';\nimport mx from '@lib/mx';\nimport { string2json, map2list } from '@lib/util';\n\nconst { mapActions } = createNamespacedHelpers('SimulationOperation');\n\nconst EXAMPLE_DATA = [\n  { year: '1995', value: 4.9 },\n  { year: '1996', value: 6 },\n  { year: '1997', value: 7 },\n  { year: '1998', value: 9 },\n  { year: '1999', value: 13 },\n];\n\nexport default {\n  name: 'SimulationDataAnalysis',\n  components: {\n    MenuTree: () => import('@comp/Tree/MenuTree'),\n    XmlGraph: () => import('@comp/MxGraph/XmlGraph'),\n    InoutVarsModal: () => import('../view/InoutVarsConfiguration'),\n    InoutVarsTable: () => import('../view/InoutVars.vue'),\n    ChartSet: () => import('../view/CarouselChartSet.vue'),\n  },\n  props: {\n    id: {\n      type: String,\n      default: ''\n    }\n  },\n  data () {\n    return {\n      treeData: [],\n      xml: '',\n      nodeList: [],\n      chartSet: {},\n      form: this.$form.createForm(this),\n    }\n  },\n  created () {\n    this.getAllStdnode().then(res => {\n      this.treeData = res.result;\n    });\n  },\n  methods: {\n    ...mapActions([\n      'getAllStdnode',\n      'getStdnode',\n      'addNode',\n    ]),\n    convertPortDefine: pipe(string2json, map2list('port')),\n    cellDbClick (graph, cell, e) {\n      if (cell && cell.vertex && cell.nodeData) {\n        this.cell = cell;\n        this.$refs.inoutVarsTable.show(cell.nodeData.inoutVars);\n      }\n    },\n    selectMenuTreeItem ({key}) {\n      this.addStdnode(key);\n    },\n    handleInoutVarsChange (inoutVars) {\n      this.cell.nodeData.inoutVars = inoutVars;\n    },\n    addStdnode (id) {\n      const vm = this;\n      this.getStdnode(id).then(res => {\n        const stdnode = res.result;\n        const ports = this.convertPortDefine(stdnode.portDefine);\n        // 添加的回调函数\n        this.$refs.graph.add(graph => {\n          const model = graph.getModel();\n          const parent = graph.getDefaultParent();\n         \n          // 样式begin===================\n          this.configureStylesheet(graph);\n          // 样式end====================\n          model.beginUpdate();\n          // 连线端口的宽度\n          const portWidth = 16;\n          // 类型字典，例如 `{in: 3, out: 2}`\n          const types = countBy(prop('type'), ports);\n          // 类型字典的拷贝，用于计算分子\n          const t = clone(types);\n          let subject;\n          try {\n            // 创建主体\n            subject = graph.insertVertex(parent, null, null, 0, 0, 80, 80);\n            // 主体不连接（交给`port`去连接）\n            subject.setConnectable(false);\n            // 将`stdnode`模版信息拷贝到主体上，并且赋上其他信息（对应数据库中到`nodes`内所有字段）\n            subject.nodeData = {\n              inoutVars: stdnode.inoutVars\n            };\n            // 创建端口\n            forEach(port => {\n              const v = graph.insertVertex(subject, null, null, port.type !== 'in', (t[port.type]--) / (types[port.type] + 1), portWidth, portWidth, `port;image=/static/editor/images/port_${port.type}.gif`, true);\n              v.geometry.offset = new mx.mxPoint(portWidth / - 2, portWidth / - 2);\n            },ports);\n          } finally {\n            graph.getModel().endUpdate();\n          }\n          graph.setSelectionCell(subject);\n          const node = {\n            projectID: vm.id,\n            nodeID: stdnode.nodeID,\n            name: stdnode.name,\n            inoutVars: stdnode.inoutVars,\n            priority: 0,\n            nodetypeID: stdnode.nodeID, // TODO: 这里的nodetypeID有疑惑，\n            enabled: 1\n          };\n          vm.addNode(node).then(res => {\n            subject.nodeData = res.result;\n            vm.nodeList.push(res.result);\n          })\n        });\n      });\n    },\n    configureStylesheet (graph) {\n      let style = new Object();\n      style[mx.mxConstants.STYLE_SHAPE] = mx.mxConstants.SHAPE_RECTANGLE;\n      style[mx.mxConstants.STYLE_PERIMETER] = mx.mxPerimeter.RectanglePerimeter;\n      style[mx.mxConstants.STYLE_ALIGN] = mx.mxConstants.ALIGN_CENTER;\n      style[mx.mxConstants.STYLE_VERTICAL_ALIGN] = mx.mxConstants.ALIGN_MIDDLE;\n      style[mx.mxConstants.STYLE_GRADIENTCOLOR] = '#41B9F5';\n      style[mx.mxConstants.STYLE_FILLCOLOR] = '#8CCDF5';\n      style[mx.mxConstants.STYLE_STROKECOLOR] = '#1B78C8';\n      style[mx.mxConstants.STYLE_FONTCOLOR] = '#000000';\n      style[mx.mxConstants.STYLE_ROUNDED] = true;\n      style[mx.mxConstants.STYLE_OPACITY] = '80';\n      style[mx.mxConstants.STYLE_FONTSIZE] = '12';\n      style[mx.mxConstants.STYLE_FONTSTYLE] = 0;\n      style[mx.mxConstants.STYLE_IMAGE_WIDTH] = '48';\n      style[mx.mxConstants.STYLE_IMAGE_HEIGHT] = '48';\n      graph.getStylesheet().putDefaultVertexStyle(style);\n\n      style = new Object();\n      style[mx.mxConstants.STYLE_SHAPE] = mx.mxConstants.SHAPE_SWIMLANE;\n      style[mx.mxConstants.STYLE_PERIMETER] = mx.mxPerimeter.RectanglePerimeter;\n      style[mx.mxConstants.STYLE_ALIGN] = mx.mxConstants.ALIGN_CENTER;\n      style[mx.mxConstants.STYLE_VERTICAL_ALIGN] = mx.mxConstants.ALIGN_TOP;\n      style[mx.mxConstants.STYLE_FILLCOLOR] = '#FF9103';\n      style[mx.mxConstants.STYLE_GRADIENTCOLOR] = '#F8C48B';\n      style[mx.mxConstants.STYLE_STROKECOLOR] = '#E86A00';\n      style[mx.mxConstants.STYLE_FONTCOLOR] = '#000000';\n      style[mx.mxConstants.STYLE_ROUNDED] = true;\n      style[mx.mxConstants.STYLE_OPACITY] = '80';\n      style[mx.mxConstants.STYLE_STARTSIZE] = '30';\n      style[mx.mxConstants.STYLE_FONTSIZE] = '16';\n      style[mx.mxConstants.STYLE_FONTSTYLE] = 1;\n      graph.getStylesheet().putCellStyle('group', style);\n\t\t\t\n      style = new Object();\n      style[mx.mxConstants.STYLE_SHAPE] = mx.mxConstants.SHAPE_IMAGE;\n      style[mx.mxConstants.STYLE_FONTCOLOR] = '#774400';\n      style[mx.mxConstants.STYLE_PERIMETER] = mx.mxPerimeter.RectanglePerimeter;\n      style[mx.mxConstants.STYLE_PERIMETER_SPACING] = '6';\n      style[mx.mxConstants.STYLE_ALIGN] = mx.mxConstants.ALIGN_LEFT;\n      style[mx.mxConstants.STYLE_VERTICAL_ALIGN] = mx.mxConstants.ALIGN_MIDDLE;\n      style[mx.mxConstants.STYLE_FONTSIZE] = '10';\n      style[mx.mxConstants.STYLE_FONTSTYLE] = 2;\n      style[mx.mxConstants.STYLE_IMAGE_WIDTH] = '16';\n      style[mx.mxConstants.STYLE_IMAGE_HEIGHT] = '16';\n      graph.getStylesheet().putCellStyle('port', style);\n\t\t\t\n      style = graph.getStylesheet().getDefaultEdgeStyle();\n      style[mx.mxConstants.STYLE_LABEL_BACKGROUNDCOLOR] = '#FFFFFF';\n      style[mx.mxConstants.STYLE_STROKEWIDTH] = '2';\n      style[mx.mxConstants.STYLE_ROUNDED] = true;\n      style[mx.mxConstants.STYLE_EDGE] = mx.mxEdgeStyle.EntityRelation;\n    },\n    selectOk (name) {\n      this.$set(this.chartSet, name, EXAMPLE_DATA);\n    },\n    selectCancel (name) {\n      this.$delete(this.chartSet, name, EXAMPLE_DATA);\n    },\n    startSimulation (form) {\n      console.log('开始仿真');\n      console.log('获取仿真起止时间', form.getFieldsValue().startStopTime);\n      console.log('获取mxGraph数据', this.$refs.graph.getXml());\n    },\n    stopSimulation () {\n      console.log('结束仿真');\n    }\n  }\n}\n</script>\n\n","import mod from \"-!../../../../node_modules/happypack/loader.js?id=happybabel!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./_SimulationDataAnalysis.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/happypack/loader.js?id=happybabel!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./_SimulationDataAnalysis.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./_SimulationDataAnalysis.vue?vue&type=template&id=bd17fa9c&\"\nimport script from \"./_SimulationDataAnalysis.vue?vue&type=script&lang=js&\"\nexport * from \"./_SimulationDataAnalysis.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"/Users/loong/gitlab/vsee-cloud/node_modules/vue-hot-reload-api/dist/index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!module.hot.data) {\n      api.createRecord('bd17fa9c', component.options)\n    } else {\n      api.reload('bd17fa9c', component.options)\n    }\n    module.hot.accept(\"./_SimulationDataAnalysis.vue?vue&type=template&id=bd17fa9c&\", function () {\n      api.rerender('bd17fa9c', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"src/modules/SimulationOperation/view/_SimulationDataAnalysis.vue\"\nexport default component.exports"],"sourceRoot":""}