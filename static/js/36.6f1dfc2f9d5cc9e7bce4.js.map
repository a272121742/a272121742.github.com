{"version":3,"sources":["webpack:///./src/components/G6Editor/FlowView.vue?2d0c","webpack:///./src/components/G6Editor/FlowView.vue?af32","webpack:///./src/components/G6Editor/FlowView.vue?7eb2","webpack:///src/components/G6Editor/FlowView.vue","webpack:///./src/components/G6Editor/FlowView.vue"],"names":["_node_modules_mini_css_extract_plugin_dist_loader_js_node_modules_css_loader_index_js_ref_10_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_10_2_node_modules_less_loader_dist_cjs_js_ref_10_3_node_modules_vue_loader_lib_index_js_vue_loader_options_FlowView_vue_vue_type_style_index_0_id_4a1b6bc6_lang_less_scoped_true___WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","n","render","_h","this","$createElement","_c","_self","staticClass","ref","_withStripped","G6Editor_FlowViewvue_type_script_lang_js_","name","props","data","type","Object","default","dataMapping","Function","editor","flow","graph","watch","newValue","read","created","mounted","initEditor","activated","methods","g6Editor_default","a","Flow","container","$refs","modes","move","minZoom","maxZoom","align","grid","shortcut","zoomIn","zoomOut","noEndEdge","changeMode","upClarity","getGraph","setFitView","hideGrid","edge","shape","style","stroke","labelRectStyle","fill","changeAddEdgeModel","listenEvent","_this","on","ev","item","isMultiSelect","multiId","push","model","id","multiColor","color","nodeId","nodeName","label","_ev$item$model$size$s","size","split","_ev$item$model$size$s2","slicedToArray_default","nodeWidth","nodeHeight","nodeColor","edgeId","edgeName","text","groupId","groupName","groupColor","e","$emit","source","target","cancel","sourceAnchor","targetAnchor","anchorHasBeenLinked","getNodes","disableSave","update","zoomRatio","updateMatrix","isSelected","attr","highlightEdge","unlightEdge","getItems","concat","toConsumableArray_default","getEdges","changeZoomRatio","value","download","imgData","childNodes","toDataURL","document","createElement","href","click","remove","formatTooltip","val","canvas","clarity","Number","dpr","window","devicePixelRatio","rect","getBoundingClientRect","width","height","getContext","scale","component","componentNormalizer","options","__file","__webpack_exports__"],"mappings":"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","file":"static/js/36.6f1dfc2f9d5cc9e7bce4.js","sourcesContent":["import mod from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../node_modules/css-loader/index.js??ref--10-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--10-2!../../../node_modules/less-loader/dist/cjs.js??ref--10-3!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./FlowView.vue?vue&type=style&index=0&id=4a1b6bc6&lang=less&scoped=true&\"; export default mod; export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../node_modules/css-loader/index.js??ref--10-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--10-2!../../../node_modules/less-loader/dist/cjs.js??ref--10-3!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./FlowView.vue?vue&type=style&index=0&id=4a1b6bc6&lang=less&scoped=true&\"","var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\"keep-alive\", [\n    _c(\"div\", { staticClass: \"flow-view\" }, [\n      _c(\"div\", { staticClass: \"bottom-container\" }, [\n        _c(\"div\", { staticClass: \"center-pannel\" }, [\n          _c(\"div\", { ref: \"flow\", staticClass: \"flow\" })\n        ])\n      ])\n    ])\n  ])\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","import mod from \"-!../../../node_modules/happypack/loader.js?id=happybabel!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./FlowView.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/happypack/loader.js?id=happybabel!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./FlowView.vue?vue&type=script&lang=js&\"","<template>\n  <keep-alive>\n    <div class=\"flow-view\">\n      <div class=\"bottom-container\">\n        <div class=\"center-pannel\">\n          <div\n            class=\"flow\"\n            ref=\"flow\"\n          ></div>\n        </div>\n      </div>\n    </div>\n  </keep-alive>\n</template>\n\n<script>\n/**\n * 参考 http://antvis.github.io/g6/api/item.html\n *     https://www.yuque.com/antv/g6/graph\n * -G6Editor整体框架元素介绍：\n *  editor: {                 // 即`G6Editor`，编辑器的实例；\n *    graph: {                // 编辑器中图形模块，包含了左边`itempanel`，右边的`minimap`等，都是用`graph`绘制的；\n *      model:                // 图形模块的数据模型；\n *      page: {               // 图形模块中的当前页，即中间绘图部分；\n *        flow                // 流程图实例\n *      }\n *    },\n *    toolbar:                // 顶部工具栏\n *    contextmenu:            // page中的右键菜单\n *    itempanel:              // 左边的元素项目\n *    detailpanel:            // 右边的详情页\n *    commandcontroller:      // 命令控制器\n *  }\n */\nimport G6Editor from '@antv/g6-editor';\n/**\n * 线条高光\n */\nconst highlightEdge = shape => {\n  shape.attr('stroke', '#1890ff');\n  shape.attr('lineWidth', 2);\n};\n/**\n * 线条无光\n */\nconst unlightEdge = shape => {\n  shape.attr('stroke', '#79838e');\n  shape.attr('lineWidth', 1);\n};\n\n\n/**\n * 术语讲解：\n *  node: 节点，即拖拽到`graph`或`page`上的一个个的元素；\n *  edge: 边，即节点与节点之间的连线，`node`的外边框实际上也是`edge`；\n *  anchor: 锚点，挂载`edge`的实际上是锚点；\n */\nexport default {\n  name: 'FlowView',\n  props: {\n    /**\n     * 画板数据\n     */\n    data: {\n      type: Object,\n      default: () => ({})\n    },\n    dataMapping: {\n      type: Function,\n      default: () => {}\n    }\n  },\n  data () {\n    return {\n      /**\n       * `G6Editor`编辑器实例\n       */\n      editor: null,\n      /**\n       * 流程图实例\n       */\n      flow: null,\n      /**\n       * 图形模块的实例，内置数据绑定的模型`Mode`;\n       */\n      graph: null,\n    }\n  },\n  watch: {\n    /**\n     * 当外部传入的`graph`所需要的数据发生变化时，重新绘制\n     */\n    data (newValue) {\n      this.flow.read(this.data);\n    },\n  },\n  created () {\n  },\n  mounted () {\n    this.initEditor();\n  },\n  activated () {\n    this.data && this.flow.read(this.data);\n  },\n  methods: {\n    /**\n     * @description: 初始化编辑器\n     */\n    initEditor () {\n      // 基础流程图\n      this.flow = new G6Editor.Flow({\n        graph: {\n          container: this.$refs.flow,\n          // 通过`this.graph.get('modes').default`查看可用的行为模式\n          modes: {\n            move: [\n              // 画板展示\n              'panCanvas', \n              // 可缩放\n              'keydownCmdWheelZoom', \n              'wheelChangeViewport', \n              'clickNodeSelected', \n              'clickCanvasSelected'\n            ]\n          },\n          minZoom: 0.2,\n          maxZoom: 2.5,\n        },\n        align: {\n          grid: true // 网格对齐\n        },\n        shortcut: {\n          zoomIn: true, // 开启放大快捷键\n          zoomOut: true // 开启视口缩小快捷键\n        },\n        // 不显示没有终点的边\n        noEndEdge: false\n      });\n      // 设置为移动模式，即不可编辑\n      this.flow.changeMode('move');\n      // 升级清晰度\n      this.upClarity(1.5);\n      // 流图读取数据\n      this.data && this.flow.read(this.data);\n      // 获取流图的graph示例\n      this.graph = this.flow.getGraph();\n      // 居中画布中的内容\n      this.graph.setFitView('cc');\n      // 默认关闭网格对齐\n      this.flow.hideGrid();\n      // 设置已连线样式\n      this.graph.edge({\n        shape: 'custom-flow-polyline-round',\n        style: {\n          stroke: '#79838e'\n        },\n        labelRectStyle: {\n          fill: '#ffffff'\n        }\n      });\n      // 设置动态连接线样式（准备连时的样子）\n      this.flow.changeAddEdgeModel({\n        shape: 'flow-polyline-round',\n      });\n      // 监听事件\n      // this.listenEvent();\n    },\n   \n    /**\n     * 监听事件\n     */\n    listenEvent () {\n      // 选中项后，`item`包含`node`、`edge`以及`group`;\n      this.flow.on('afteritemselected', ev => {\n        // 判断数据类型\n        switch (ev.item.type) {\n        case 'node':\n          if (!this.isMultiSelect) {\n            this.nodeId = ev.item.model.id\n            this.nodeName = ev.item.model.label;\n            [this.nodeWidth, this.nodeHeight] = ev.item.model.size.split('*')\n            this.nodeColor = ev.item.model.color\n          } else {\n            this.multiId.push(ev.item.model.id)\n            this.multiColor = ev.item.model.color\n          }\n          break\n        case 'edge':\n          this.edgeId = ev.item.model.id;\n          this.edgeName = ev.item.model.label\n            ? ev.item.model.label.text\n            : null;\n          break\n        case 'group':\n          this.groupId = ev.item.model.id\n          this.groupName = ev.item.model.label ? ev.item.model.label : null\n          this.groupColor = ev.item.model.color\n            ? ev.item.model.color\n            : '#f2f4f5'\n          break\n        default:\n          break\n        }\n      });\n      // flow事件监听 取消多选\n      this.flow.on('beforeitemunselected', () => {\n        this.isMultiSelect = false;\n      });\n      // 节点双击后，向上层组件发出通知\n      this.flow.on('node:dblclick', e => {\n        this.$emit('node:dbClick', e);\n      });\n      // this.flow.on('hoveranchor:beforeaddedge', e => {\n      //   console.log('hoveranchor:beforeaddedge');\n      //   if (e.anchor.type === 'input') {\n      //     e.cancel = true;\n      //   }\n      // });\n      // 拖拽节点的时候，判断哪些点可以拖动\n      this.flow.on('dragedge:beforeshowanchor', e => {\n        // 不允许自己拖动自己\n        if (e.source === e.target) {\n          e.cancel = true;\n        }\n        // 输入对输出\n        if (e.sourceAnchor.type === e.targetAnchor.type) {\n          e.cancel = true;\n        }\n        // 如果已经连接，不允许重复连接\n        if (this.flow.anchorHasBeenLinked(e.source, e.sourceAnchor) || this.flow.anchorHasBeenLinked(e.target, e.targetAnchor)) {\n          e.cancel = true;\n        }\n        // // 如果拖动的是目标方向，则取消显示目标节点中已被连过的锚点（不明白什么意思，预留）\n        // if (e.dragEndPointType === 'target' && this.flow.anchorHasBeenLinked(e.target, e.targetAnchor)) {\n        //   e.cancel = true;\n        // }\n        // // 如果拖动的是源方向，则取消显示源节点中已被连过的锚点（不明白什么意思，预留）\n        // if (e.dragEndPointType === 'source' && this.flow.anchorHasBeenLinked(e.source, e.sourceAnchor)) {\n        //   e.cancel = true;\n        // }\n      });\n      // 渲染完成时，向上层组件发出通知，可用于做业务数据和图形数据的绑定\n      this.graph.on('afterrender', e => {\n        this.$emit('render', this.getNodes());\n      });\n      // 当有修改痕迹时，才允许编辑\n      this.graph.on('afterchange', e => {\n        this.disableSave = false;\n      });\n      // 自动更新大小\n      this.graph.on('afterchangesize', () => {\n        this.graph.update()\n      });\n      // 监听画布大小变化\n      this.graph.on('afterzoom', e => {\n        this.zoomRatio = e.updateMatrix[0] * 100;\n      });\n      // 连线悬停时候高亮\n      this.flow.on('edge:mouseenter', e => {\n        if (!e.item.isSelected) {\n          highlightEdge(e.shape);\n        }\n      });\n      // 连线取消悬停时还原\n      this.flow.on('edge:mouseleave', e => {\n        if (!e.item.isSelected) {\n          unlightEdge(e.shape)\n        }\n      });\n    },\n    /**\n     * 获取所有绘制元素（包含`node`和`edge`）\n     */\n    getItems () {\n      return [...this.getNodes(), ...this.getEdges()];\n    },\n    /**\n     * 获取所有`edge`实例\n     */\n    getEdges () {\n      return this.graph.getEdges();\n    },\n    /**\n     * 获取所有`node`实例\n     */\n    getNodes () {\n      return this.graph.getNodes();\n    },\n    /**\n     * 改变缩放比例\n     */\n    changeZoomRatio (value) {\n      // this.graph.zoom(value / 100);\n      this.zoomRatio = value;\n    },\n    /**\n     * @description: 下载流图\n     */\n    download () {\n      this.flow.hideGrid()\n      this.graph.setFitView('cc')\n      const canvas = this.$refs.flow.childNodes[0].childNodes[0]\n      const imgData = canvas.toDataURL('image/png')\n      // const pdf = new JsPDF({\n      //   orientation: 'l', // 竖排\n      //   unit: 'pt',\n      //   format: 'a4'\n      // })\n      // // const width = 1190.55 // a3\n      // const pdfWidth = 840.51 // a4\n      // pdf.addImage(imgData, 'PNG', 0, 0,\n      //   pdfWidth, pdfWidth / canvas.width * canvas.height, '', 'FAST')\n      // pdf.save('download.pdf')\n      const a = document.createElement('a');\n      a.href = imgData;\n      a.download = 'download.png';\n      a.click();\n      a.remove();\n    },\n    /**\n     * @description: 格式化\n     */\n    formatTooltip (val) {\n      return `缩放比${val}%`\n    },\n    /**\n     * 升级清晰度\n     */\n    upClarity (value) {\n      // 增强清晰度\n      const canvas = this.$refs.flow.childNodes[0].childNodes[0];\n      const clarity = Number(value) || 1.5; // 清晰度\n      const dpr = window.devicePixelRatio && window.devicePixelRatio >= clarity\n        ? window.devicePixelRatio : clarity;\n      const rect = canvas.getBoundingClientRect();\n      canvas.width = rect.width * dpr;\n      canvas.height = rect.height * dpr;\n      const ctx = canvas.getContext('2d');\n      ctx.scale(dpr, dpr);\n    }\n  }\n}\n</script>\n\n<style lang=\"less\" scoped>\n/* icon-font */\n@import 'assets/icon/g6_editor_font.css';\n\n.flow-view {\n  position: relative;\n  width: 100%;\n  height: calc(100% - 20px)!important;\n  // 底部区域（左项目面板、中心画布、右属性面板）\n  .bottom-container {\n    width: 100%;\n    height: 100%;\n    display: flex;\n    background: #f7f9fb;\n    justify-content: space-around;\n    // 中间画布\n    .center-pannel {\n      background: #ffffff;\n      display: inline-block;\n      width: 100%;\n      height: 100%;\n      border: 1px solid #dedbe2;\n      // 流程图\n      .flow {\n        width: 100%;\n        height: 100%;\n        overflow: hidden;\n      }\n    }\n  }\n}\n</style>","import { render, staticRenderFns } from \"./FlowView.vue?vue&type=template&id=4a1b6bc6&scoped=true&\"\nimport script from \"./FlowView.vue?vue&type=script&lang=js&\"\nexport * from \"./FlowView.vue?vue&type=script&lang=js&\"\nimport style0 from \"./FlowView.vue?vue&type=style&index=0&id=4a1b6bc6&lang=less&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"4a1b6bc6\",\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"/Users/loong/gitlab/vsee-cloud/node_modules/vue-hot-reload-api/dist/index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!module.hot.data) {\n      api.createRecord('4a1b6bc6', component.options)\n    } else {\n      api.reload('4a1b6bc6', component.options)\n    }\n    module.hot.accept(\"./FlowView.vue?vue&type=template&id=4a1b6bc6&scoped=true&\", function () {\n      api.rerender('4a1b6bc6', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"src/components/G6Editor/FlowView.vue\"\nexport default component.exports"],"sourceRoot":""}