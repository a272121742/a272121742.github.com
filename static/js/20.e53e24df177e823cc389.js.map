{"version":3,"sources":["webpack:///./node_modules/vue-codemirror-lite/codemirror.vue?bee6","webpack:///./node_modules/vue-codemirror-lite/codemirror.vue?c224","webpack:///node_modules/vue-codemirror-lite/codemirror.vue","webpack:///./node_modules/vue-codemirror-lite/codemirror.vue?4d0f","webpack:///./node_modules/vue-codemirror-lite/codemirror.vue"],"names":["_mini_css_extract_plugin_dist_loader_js_css_loader_index_js_ref_8_1_vue_loader_lib_loaders_stylePostLoader_js_postcss_loader_src_index_js_ref_8_2_vue_loader_lib_index_js_vue_loader_options_codemirror_vue_vue_type_style_index_0_lang_css___WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","n","render","_vm","this","$createElement","_self","_c","_m","_withStripped","CodeMirror","vue_codemirror_lite_codemirrorvue_type_script_lang_js_","props","value","type","String","default","options","Object","mode","lineNumbers","lineWrapping","data","skipNextChangeEvent","ready","_this","editor","fromTextArea","$el","querySelector","setValue","on","cm","getValue","$emit","mounted","watch","newVal","oldVal","scrollInfo","getScrollInfo","scrollTo","left","top","newOptions","optionName","hasOwnProperty","setOption","beforeDestroy","toTextArea","component","componentNormalizer","_h","staticClass","__file","__webpack_exports__"],"mappings":"8FAAA,IAAAA,EAAAC,EAAA,QAAAA,EAAAC,EAAAF,GAAyS,4CCAzS,SAAAG,IACA,IAAAC,EAAAC,KACAD,EAAAE,eAEA,OADAF,EAAAG,MAAAC,GACAJ,EAAAK,GAAA,GAUAN,EAAAO,eAAA,ECPA,IAAAC,EAAAV,EAAA,QACAA,EAAA,QACA,ICT6HW,EDS7H,CACAC,MAAA,CACAC,MAAA,CACAC,KAAAC,OACAC,QAAA,IAEAC,QAAA,CACAH,KAAAI,OACAF,QAAA,WACA,OACAG,KAAA,kBACAC,aAAA,EACAC,cAAA,MAKAC,KAAA,WACA,OACAC,qBAAA,IAGAC,MAAA,WACA,IAAAC,EAAArB,KACAA,KAAAsB,OAAAhB,EAAAiB,aAAAvB,KAAAwB,IAAAC,cAAA,YAAAzB,KAAAa,SACAb,KAAAsB,OAAAI,SAAA1B,KAAAS,OACAT,KAAAsB,OAAAK,GAAA,kBAAAC,GACAP,EAAAF,oBACAE,EAAAF,qBAAA,GAGAE,EAAAZ,MAAAmB,EAAAC,WACAR,EAAAS,OACAT,EAAAS,MAAA,SAAAF,EAAAC,gBAIAE,QAAA,WACA,IAAAV,EAAArB,KACAA,KAAAsB,OAAAhB,EAAAiB,aAAAvB,KAAAwB,IAAAC,cAAA,YAAAzB,KAAAa,SACAb,KAAAsB,OAAAI,SAAA1B,KAAAS,OACAT,KAAAsB,OAAAK,GAAA,kBAAAC,GACAP,EAAAF,oBACAE,EAAAF,qBAAA,EAGAE,EAAAS,QACAT,EAAAS,MAAA,SAAAF,EAAAC,YACAR,EAAAS,MAAA,QAAAF,EAAAC,gBAIAG,MAAA,CACAvB,MAAA,SAAAwB,EAAAC,GAEA,GAAAD,IADAjC,KAAAsB,OAAAO,WACA,CACA7B,KAAAmB,qBAAA,EACA,IAAAgB,EAAAnC,KAAAsB,OAAAc,gBACApC,KAAAsB,OAAAI,SAAAO,GACAjC,KAAAsB,OAAAe,SAAAF,EAAAG,KAAAH,EAAAI,OAGA1B,QAAA,SAAA2B,EAAAN,GACA,oBAAAM,EACA,QAAAC,KAAAD,EACAA,EAAAE,eAAAD,IACAzC,KAAAsB,OAAAqB,UAAAF,EAAAD,EAAAC,MAMAG,cAAA,WACA5C,KAAAsB,QACAtB,KAAAsB,OAAAuB,uCE3EAC,EAAgBhC,OAAAiC,EAAA,EAAAjC,CACdP,EACAT,EHJF,CACA,WACA,IACAkD,EADAhD,KACAC,eACAE,EAFAH,KAEAE,MAAAC,IAAA6C,EACA,OAAA7C,EAAA,OAAsB8C,YAAA,uBAAqC,CAAA9C,EAAA,iBGC3D,EACA,KACA,KACA,MAuBA2C,EAAAjC,QAAAqC,OAAA,kDACeC,EAAA,QAAAL","file":"static/js/20.e53e24df177e823cc389.js","sourcesContent":["import mod from \"-!../mini-css-extract-plugin/dist/loader.js!../css-loader/index.js??ref--8-1!../vue-loader/lib/loaders/stylePostLoader.js!../postcss-loader/src/index.js??ref--8-2!../vue-loader/lib/index.js??vue-loader-options!./codemirror.vue?vue&type=style&index=0&lang=css&\"; export default mod; export * from \"-!../mini-css-extract-plugin/dist/loader.js!../css-loader/index.js??ref--8-1!../vue-loader/lib/loaders/stylePostLoader.js!../postcss-loader/src/index.js??ref--8-2!../vue-loader/lib/index.js??vue-loader-options!./codemirror.vue?vue&type=style&index=0&lang=css&\"","var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _vm._m(0)\n}\nvar staticRenderFns = [\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"vue-codemirror-wrap\" }, [_c(\"textarea\")])\n  }\n]\nrender._withStripped = true\n\nexport { render, staticRenderFns }","<template>\n  <div class=\"vue-codemirror-wrap\">\n    <textarea></textarea>\n  </div>\n</template>\n\n<script>\n  var CodeMirror = require('codemirror/lib/codemirror.js')\n  require('codemirror/lib/codemirror.css')\n  export default {\n    props: {\n      value: {\n        type: String,\n        default: ''\n      },\n      options: {\n        type: Object,\n        default: function () {\n          return {\n            mode: 'text/javascript',\n            lineNumbers: true,\n            lineWrapping: true\n          }\n        }\n      },\n    },\n    data: function () {\n      return {\n        skipNextChangeEvent: false\n      }\n    },\n    ready: function () {\n      var _this = this\n      this.editor = CodeMirror.fromTextArea(this.$el.querySelector('textarea'), this.options)\n      this.editor.setValue(this.value)\n      this.editor.on('change', function(cm) {\n        if (_this.skipNextChangeEvent) {\n          _this.skipNextChangeEvent = false\n          return\n        }\n        _this.value = cm.getValue()\n        if (!!_this.$emit) {\n          _this.$emit('change', cm.getValue())\n        }\n      })\n    },\n    mounted: function () {\n      var _this = this\n      this.editor = CodeMirror.fromTextArea(this.$el.querySelector('textarea'), this.options)\n      this.editor.setValue(this.value)\n      this.editor.on('change', function(cm) {\n        if (_this.skipNextChangeEvent) {\n          _this.skipNextChangeEvent = false\n          return\n        }\n        if (!!_this.$emit) {\n          _this.$emit('change', cm.getValue())\n          _this.$emit('input', cm.getValue())\n        }\n      })\n    },\n    watch: {\n      'value': function (newVal, oldVal) {\n        var editorValue = this.editor.getValue()\n        if (newVal !== editorValue) {\n          this.skipNextChangeEvent = true\n          var scrollInfo = this.editor.getScrollInfo()\n          this.editor.setValue(newVal)\n          this.editor.scrollTo(scrollInfo.left, scrollInfo.top)\n        }\n      },\n      'options': function (newOptions, oldVal) {\n        if (typeof newOptions === 'object') {\n          for (var optionName in newOptions) {\n            if (newOptions.hasOwnProperty(optionName)) {\n              this.editor.setOption(optionName, newOptions[optionName])\n            }\n          }\n        }\n      }\n    },\n    beforeDestroy: function () {\n      if (this.editor) {\n        this.editor.toTextArea()\n      }\n    }\n  }\n</script>\n\n<style>\n  .CodeMirror-code {\n    font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace;\n  }\n</style>\n","import mod from \"-!../vue-loader/lib/index.js??vue-loader-options!./codemirror.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../vue-loader/lib/index.js??vue-loader-options!./codemirror.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./codemirror.vue?vue&type=template&id=4f42b60c&\"\nimport script from \"./codemirror.vue?vue&type=script&lang=js&\"\nexport * from \"./codemirror.vue?vue&type=script&lang=js&\"\nimport style0 from \"./codemirror.vue?vue&type=style&index=0&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"/Users/loong/gitlab/vsee-cloud/node_modules/vue-hot-reload-api/dist/index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!module.hot.data) {\n      api.createRecord('4f42b60c', component.options)\n    } else {\n      api.reload('4f42b60c', component.options)\n    }\n    module.hot.accept(\"./codemirror.vue?vue&type=template&id=4f42b60c&\", function () {\n      api.rerender('4f42b60c', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"node_modules/vue-codemirror-lite/codemirror.vue\"\nexport default component.exports"],"sourceRoot":""}